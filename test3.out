instruction memory:
	instrMem[ 0 ]	= 0x004a0001	= 4849665	= nor 1 2 1
	instrMem[ 1 ]	= 0x00090001	= 589825	= add 1 1 1
	instrMem[ 2 ]	= 0x01800000	= 25165824	= halt

@@@
state before cycle 0 starts:
	pc = 0
	data memory:
		dataMem[ 0 ] = 4849665
		dataMem[ 1 ] = 589825
		dataMem[ 2 ] = 25165824
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 1 starts:
	pc = 1
	data memory:
		dataMem[ 0 ] = 4849665
		dataMem[ 1 ] = 589825
		dataMem[ 2 ] = 25165824
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 4849665 ( nor 1 2 1 )
		pcPlus1 = 1
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 2 starts:
	pc = 2
	data memory:
		dataMem[ 0 ] = 4849665
		dataMem[ 1 ] = 589825
		dataMem[ 2 ] = 25165824
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 589825 ( add 1 1 1 )
		pcPlus1 = 2
	ID/EX pipeline register:
		instruction = 4849665 ( nor 1 2 1 )
		pcPlus1 = 1
		readRegA = 0
		readRegB = 0
		offset = 1 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 3 starts:
	pc = 3
	data memory:
		dataMem[ 0 ] = 4849665
		dataMem[ 1 ] = 589825
		dataMem[ 2 ] = 25165824
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 25165824 ( halt )
		pcPlus1 = 3
	ID/EX pipeline register:
		instruction = 589825 ( add 1 1 1 )
		pcPlus1 = 2
		readRegA = 0
		readRegB = 0
		offset = 1 (Don't Care)
	EX/MEM pipeline register:
		instruction = 4849665 ( nor 1 2 1 )
		branchTarget 2 (Don't Care)
		eq ? True (Don't Care)
		aluResult = -1
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 4 starts:
	pc = 4
	data memory:
		dataMem[ 0 ] = 4849665
		dataMem[ 1 ] = 589825
		dataMem[ 2 ] = 25165824
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0 ( add 0 0 0 )
		pcPlus1 = 4
	ID/EX pipeline register:
		instruction = 25165824 ( halt )
		pcPlus1 = 3
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 589825 ( add 1 1 1 )
		branchTarget 3 (Don't Care)
		eq ? False (Don't Care)
		aluResult = -1
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 4849665 ( nor 1 2 1 )
		writeData = -1
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 5 starts:
	pc = 5
	data memory:
		dataMem[ 0 ] = 4849665
		dataMem[ 1 ] = 589825
		dataMem[ 2 ] = 25165824
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = -1
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0 ( add 0 0 0 )
		pcPlus1 = 5
	ID/EX pipeline register:
		instruction = 0 ( add 0 0 0 )
		pcPlus1 = 4
		readRegA = 0
		readRegB = 0
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 25165824 ( halt )
		branchTarget 3 (Don't Care)
		eq ? True (Don't Care)
		aluResult = -1 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 589825 ( add 1 1 1 )
		writeData = -1
	WB/END pipeline register:
		instruction = 4849665 ( nor 1 2 1 )
		writeData = -1
end state
Machine halted
Total of 6 cycles executed
Final state of machine:

@@@
state before cycle 6 starts:
	pc = 6
	data memory:
		dataMem[ 0 ] = 4849665
		dataMem[ 1 ] = 589825
		dataMem[ 2 ] = 25165824
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = -1
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0 ( add 0 0 0 )
		pcPlus1 = 6
	ID/EX pipeline register:
		instruction = 0 ( add 0 0 0 )
		pcPlus1 = 5
		readRegA = 0
		readRegB = 0
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 0 ( add 0 0 0 )
		branchTarget 4 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 25165824 ( halt )
		writeData = -1 (Don't Care)
	WB/END pipeline register:
		instruction = 589825 ( add 1 1 1 )
		writeData = -1
end state
